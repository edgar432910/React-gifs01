{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACoCC,UAAUH,GAD9C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KACCC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATxB,kBAaVM,GAbU,4CAAD,sDCEPO,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEnC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,0CAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHFS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEtB,ECHuB,SAACA,GACvB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXEC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAAAC,GACfH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAItB,CAACtB,IAGIuB,EDbqBK,CAAa5B,GAA9Ba,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAMlB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAoDlB,IAEvDsB,GAAS,mBAAGJ,UAAU,oCAAb,qBACV,qBAAKA,UAAU,YAAf,SACI,6BAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,eESlBkB,EA3BG,WACd,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OAAQ,qCAEA,6CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAECA,SAAUA,GADNA,Y,MCnB7B+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.15329264.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats])\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n     \r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","\r\nexport const getGifs=async(category)=>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ncZNZuDtKzyAJBHhHCrj8DEEL1MW5Hmx`\r\n\r\n  const resp= await fetch(url);\r\n  const {data}= await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated  animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const {data:images,loading}= useFetchGifs(category);\r\n\r\n  \r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated  animate__fadeIn\">{category}</h3>\r\n\r\n        {loading&&<p className=\"animate__animated  animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n      useEffect(()=>{\r\n        getGifs(category).then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n                \r\n        })\r\n    },[category]);\r\n\r\n  \r\n    return state;\r\n}","\r\n\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExperApp=()=>{\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n\r\n    // const handleAdd=()=>{\r\n    //     setCategories(cats=>[...cats, 'HunterXHunter'])\r\n    // }\r\n\r\n\r\n    return (<>\r\n            \r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                        <GifGrid\r\n                        key={category}\r\n                         category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n    </>);\r\n};\r\n\r\nexport default GifExperApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExperApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExperApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}